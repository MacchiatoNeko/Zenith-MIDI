<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ZenithEngine.UI"
                    xmlns:module="clr-namespace:ZenithEngine.ModuleUI"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
                    xmlns:media="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Scrollbar.xaml"/>
        <ResourceDictionary Source="Theme.xaml"/>
        <ResourceDictionary Source="ListBox.xaml"/>
        <ResourceDictionary Source="Checkbox.xaml"/> 
        <ResourceDictionary Source="ComboBox.xaml"/>
        <ResourceDictionary Source="NumberBox.xaml"/>
        <ResourceDictionary Source="LabelledItem.xaml"/>
        <ResourceDictionary Source="Slider.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MatText}"/>
    <Style TargetType="{x:Type Label}" BasedOn="{StaticResource MatText}"/>
    <Style TargetType="{x:Type module:UILabel}" BasedOn="{StaticResource MatText}"/>

    <Style TargetType="{x:Type local:Title}" x:Key="MatTitle" BasedOn="{StaticResource MatTitleText}">
        <Setter Property="Margin" Value="0,20,0,10"/>
    </Style>

    <Style x:Key="WindowButton" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border"
                        BorderThickness="1"
                        Padding="4,2"
                        BorderBrush="DarkGray"
                        CornerRadius="3"
                        Background="{TemplateBinding Background}">
                        <Grid >
                            <ContentPresenter HorizontalAlignment="Center"
                           VerticalAlignment="Center" Name="content"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF4788c8" />
                            <Setter Property="Foreground" Value="#FF4788c8" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True">
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MenuButtonStyle" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border"
                        Padding="4,2"
                        Background="{TemplateBinding Background}">
                        <Grid >
                            <ContentPresenter HorizontalAlignment="Center"
                           VerticalAlignment="Center" Name="content"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#44FFFFFF" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True">
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MainTabs" TargetType="TabItem" BasedOn="{StaticResource MatText}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid Name="Panel">
                        <local:RippleEffectDecorator ExpandTime="0.2" FadeTime="0.2">
                            <Border Padding="{TemplateBinding Padding}">
                                <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="10,2"/>
                            </Border>
                        </local:RippleEffectDecorator>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Panel" Property="Background" Value="#33FFFFFF" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Panel" Property="Background" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SubTabItems" TargetType="TabItem" BasedOn="{StaticResource MatText}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid Name="Panel" Height="30">
                        <local:RippleEffectDecorator ExpandTime="0.2" FadeTime="0.2">
                            <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="10,2"/>
                        </local:RippleEffectDecorator>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Panel" Property="Background" Value="#33FFFFFF" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Panel" Property="Background" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SubTabs" TargetType="TabControl">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <DockPanel LastChildFill="True">
                        <Border Name="titlebar" Grid.Row="0" DockPanel.Dock="Top" Visibility="{Binding ChromeVisibility, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" Background="#11FFFFFF">
                            <DockPanel>
                                <TabPanel
                                    Grid.Row="0"
                                    Panel.ZIndex="1"
                                    Margin="0,0,0,0"
                                    IsItemsHost="True"
                                    Background="Transparent" />
                            </DockPanel>
                        </Border>
                        <Border Grid.Row="1" CornerRadius="0, 12, 12, 12" >
                            <ContentPresenter ContentSource="SelectedContent" />
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MatButtonWrapper" TargetType="ContentControl" BasedOn="{StaticResource MatText}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Grid Background="{TemplateBinding Background}" Width="{TemplateBinding Width}">
                        <Border x:Name="background">
                            <Border.Background>
                                <SolidColorBrush x:Name="bgBrush" Color="{DynamicResource PrimaryColor}"/>
                            </Border.Background>
                            <Border.Effect>
                                <DropShadowEffect x:Name="dropShadow" ShadowDepth="0" Direction="0" BlurRadius="5"/>
                            </Border.Effect>
                        </Border>
                        <local:RippleEffectDecorator ExpandTime="0.2" FadeTime="0.2">
                            <Border Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch" Name="content"/>
                            </Border>
                        </local:RippleEffectDecorator>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Value="True" Property="IsMouseOver">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="bgBrush" Storyboard.TargetProperty="Color" Duration="0:0:0.1" To="#43A047" />
                                        <DoubleAnimation Storyboard.TargetName="dropShadow" Storyboard.TargetProperty="BlurRadius" Duration="0:0:0.1" To="10" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="bgBrush" Storyboard.TargetProperty="Color" Duration="0:0:0.1" To="{StaticResource PrimaryColor}" />
                                        <DoubleAnimation Storyboard.TargetName="dropShadow" Storyboard.TargetProperty="BlurRadius" Duration="0:0:0.1" To="5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Value="False" Property="IsEnabled">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="bgBrush" Storyboard.TargetProperty="Color" Duration="0:0:0.1" To="#222222" />
                                        <DoubleAnimation Storyboard.TargetName="dropShadow" Storyboard.TargetProperty="BlurRadius" Duration="0:0:0.0" To="3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="bgBrush" Storyboard.TargetProperty="Color" Duration="0:0:0.1" To="{StaticResource PrimaryColor}" />
                                        <DoubleAnimation Storyboard.TargetName="dropShadow" Storyboard.TargetProperty="BlurRadius" Duration="0:0:0.0" To="5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MatButtonBase" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="MinHeight" Value="32"/>
    </Style>

    <Style x:Key="MatButton" TargetType="Button" BasedOn="{StaticResource MatButtonBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentControl 
                        Style="{DynamicResource MatButtonWrapper}" 
                        Background="{TemplateBinding Background}"
                        Width="{TemplateBinding Width}"
                        Padding="{TemplateBinding Padding}"
                        >
                        <ContentPresenter HorizontalAlignment="Center"
                           VerticalAlignment="Center" Name="content"/>
                    </ContentControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MatLoadableButton" TargetType="Button" BasedOn="{StaticResource MatButtonBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:LoaderButton">
                    <ContentControl 
                        Style="{DynamicResource MatButtonWrapper}" 
                        Background="{TemplateBinding Background}"
                        Width="{TemplateBinding Width}"
                        Padding="{TemplateBinding Padding}"
                        >
                        <Grid>
                            <Grid Name="loaderGrid" Height="24" Width="24" Visibility="Hidden">
                                <Grid.Resources>
                                    <Storyboard x:Name="spinner" x:Key="spinner" RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="canvas" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.5000000" Value="180"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:01" Value="359"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </Grid.Resources>
                                <Grid.Triggers>
                                    <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                        <BeginStoryboard Storyboard="{StaticResource spinner}"/>
                                    </EventTrigger>
                                </Grid.Triggers>
                                <Canvas>
                                    <Canvas x:Name="canvas"  Height="24" Width="24" RenderTransformOrigin="0.5,0.5">
                                        <Canvas.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Canvas.RenderTransform>

                                        <Path Data="F1 M 10.000,2.918 C 6.123,2.918 2.964,6.050 2.920,9.917 L 0.002,9.917 C 0.046,4.441 4.514,0.000 10.000,0.000 C 15.487,0.000 19.954,4.441 19.999,9.917 L 17.080,9.917 C 17.036,6.050 13.878,2.918 10.000,2.918 Z" UseLayoutRounding="False" Canvas.Top="1.932" Canvas.Left="1.937">
                                            <Path.Fill>
                                                <LinearGradientBrush MappingMode="Absolute" StartPoint="399.906,240.414" EndPoint="419.903,240.414">
                                                    <LinearGradientBrush.GradientStops>
                                                        <GradientStop Offset="0.26" Color="#7fffffff"/>
                                                        <GradientStop Offset="1.00" Color="#32ffffff"/>
                                                    </LinearGradientBrush.GradientStops>
                                                    <LinearGradientBrush.Transform>
                                                        <MatrixTransform Matrix="-1.000,0.000,0.000,-1.000,419.905,245.373" />
                                                    </LinearGradientBrush.Transform>
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Data="F1 M 17.080,9.917 C 17.080,9.945 17.083,9.972 17.083,10.000 C 17.083,13.904 13.905,17.082 10.000,17.082 C 6.095,17.082 2.917,13.904 2.917,10.000 C 2.917,9.972 2.920,9.945 2.920,9.917 L 0.002,9.917 C 0.002,9.945 0.000,9.972 0.000,10.000 C 0.000,15.514 4.485,20.000 10.000,20.000 C 15.514,20.000 20.000,15.514 20.000,10.000 C 20.000,9.972 19.999,9.945 19.999,9.917 L 17.080,9.917 Z" UseLayoutRounding="False" Canvas.Top="1.932" Canvas.Left="1.937">
                                            <Path.Fill>
                                                <LinearGradientBrush MappingMode="Absolute" StartPoint="489.491,230.414" EndPoint="509.491,230.414">
                                                    <LinearGradientBrush.GradientStops>
                                                        <GradientStop Offset="0.00" Color="#ffffffff"/>
                                                        <GradientStop Offset="0.73" Color="#7fffffff"/>
                                                    </LinearGradientBrush.GradientStops>
                                                    <LinearGradientBrush.Transform>
                                                        <MatrixTransform Matrix="1.000,0.000,-0.000,-1.000,-489.491,245.373" />
                                                    </LinearGradientBrush.Transform>
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                    </Canvas>
                                </Canvas>
                            </Grid>
                            <Grid Name="contentGrid">
                                <ContentPresenter HorizontalAlignment="Center"
                                VerticalAlignment="Center" Name="content"/>
                            </Grid>
                        </Grid>
                    </ContentControl>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ShowingLoader" Value="True">
                            <Setter Property="Visibility" TargetName="contentGrid" Value="Hidden"/>
                            <Setter Property="Visibility" TargetName="loaderGrid" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MatTextbox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MatText}">
        <Setter Property="Background" Value="#444444"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid>
                        <Border Background="Black">
                            <Border.Effect>
                                <DropShadowEffect x:Name="dropShadow" ShadowDepth="0" BlurRadius="5"/>
                            </Border.Effect>
                        </Border>
                        <Border Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" 
                                             Background="{TemplateBinding Background}" 
                                             SnapsToDevicePixels="true">
                            <ScrollViewer Name="PART_ContentHost" Background="{TemplateBinding Background}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Value="#333333" Property="Background" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="dropShadow" Storyboard.TargetProperty="BlurRadius" Duration="0:0:0.1" To="10" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="dropShadow" Storyboard.TargetProperty="BlurRadius" Duration="0:0:0.1" To="5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <media:Style x:Key="FocusVisual">
        <media:Setter Property="media:Control.Template">
            <media:Setter.Value>
                <media:ControlTemplate>
                    <media:Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{media:DynamicResource {x:Static media:SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </media:ControlTemplate>
            </media:Setter.Value>
        </media:Setter>
    </media:Style>

    <Style x:Key="MatOverlay" TargetType="{x:Type local:Overlay}">
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="Background" Value="{DynamicResource OverlayBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Overlay}">
                    <Grid>
                        <Border IsHitTestVisible="False" Background="{TemplateBinding Background}"/>
                        <Border Margin="10">
                            <ContentPresenter 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style BasedOn="{StaticResource MatButton}" TargetType="Button"/>
    <Style BasedOn="{StaticResource MatLoadableButton}" TargetType="local:LoaderButton"/>

    <Style BasedOn="{StaticResource MatTextbox}" TargetType="{x:Type TextBox}"/>
    
    <Style BasedOn="{StaticResource MatTitle}" TargetType="{x:Type local:Title}"/>

    <Style BasedOn="{StaticResource SubTabs}" TargetType="{x:Type TabControl}"/>
    <Style BasedOn="{StaticResource SubTabItems}" TargetType="{x:Type TabItem}"/>

    <Style BasedOn="{StaticResource MatCheckbox}" TargetType="{x:Type CheckBox}"/>
    <Style BasedOn="{StaticResource MatCheckbox}" TargetType="{x:Type local:Checkbox}"/>
    <Style BasedOn="{StaticResource MatCheckbox}" TargetType="{x:Type module:UICheckbox}"/>

    <Style BasedOn="{StaticResource MatComboBoxToggleButton}" TargetType="{x:Type ToggleButton}"/>
    <Style BasedOn="{StaticResource MatComboBoxItem}" TargetType="{x:Type ComboBoxItem}"/>
    <Style BasedOn="{StaticResource MatComboBox}" TargetType="{x:Type ComboBox}"/>

    <Style BasedOn="{StaticResource MatComboBox}" TargetType="{x:Type local:EnumComboBox}"/>
    <Style BasedOn="{StaticResource MatComboBoxItem}" TargetType="{x:Type local:EnumComboBoxItem}"/>

    <Style BasedOn="{StaticResource MatNumberBox}" TargetType="{x:Type local:NumberBox}"/>
    
    <Style BasedOn="{StaticResource MatSlider}" TargetType="{x:Type local:Slider}"/>

    <Style BasedOn="{StaticResource MatOverlay}" TargetType="{x:Type local:Overlay}"/>
</ResourceDictionary>