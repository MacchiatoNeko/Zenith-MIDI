<UserControl x:Class="Zenith.RenderTab"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Zenith"
             xmlns:ui="clr-namespace:ZenithEngine.UI;assembly=ZenithEngine"
             xmlns:models="clr-namespace:Zenith.Models"
             mc:Ignorable="d" 
             d:DesignHeight="700" d:DesignWidth="1280">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <local:DecimalIntConvert x:Key="DecimalIntConvert"/>
            <local:DecimalDoubleConvert x:Key="DecimalDoubleConvert"/>

            <Style x:Key="RenderType" TargetType="{x:Type ui:EnumComboBox}" BasedOn="{StaticResource MatComboBox}">
                <Setter Property="IsEnabled" Value="{Binding IsNotRendering}"/>
                <Setter Property="Enum" Value="{x:Type models:OutputType}"/>
                <Setter Property="Padding" Value="6,5,6,6"/>
                <Setter Property="MinWidth" Value="120"/>
            </Style>

            <Style x:Key="BrowseButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MatButton}">
                <Setter Property="Padding" Value="20,0"/>
                <Setter Property="Margin" Value="10,0"/>
            </Style>

            <Style x:Key="UseMaskButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BrowseButton}">
                <Setter Property="IsEnabled" Value="{Binding IsNotRendering}"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding OutputOptions.UseMaskOutput}" Value="False">
                        <Setter Property="IsEnabled" Value="False"/>
                    </DataTrigger>
                </Style.Triggers >
            </Style>

            <Style x:Key="UseAudioButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BrowseButton}">
                <Setter Property="IsEnabled" Value="{Binding IsNotRendering}"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding OutputOptions.UseAudio}" Value="False">
                        <Setter Property="IsEnabled" Value="False"/>
                    </DataTrigger>
                </Style.Triggers >
            </Style>

            <Style x:Key="RenderBitrate" TargetType="{x:Type ui:NumberBox}" BasedOn="{StaticResource MatNumberBox}">
                <Setter Property="IsEnabled" Value="{Binding IsNotRendering}"/>
                <Setter Property="Maximum" Value="100000"/>
                <Setter Property="Minimum" Value="1"/>
            </Style>

            <Style x:Key="RenderCRF" TargetType="{x:Type ui:NumberBox}" BasedOn="{StaticResource MatNumberBox}">
                <Setter Property="IsEnabled" Value="{Binding IsNotRendering}"/>
                <Setter Property="Maximum" Value="51"/>
                <Setter Property="Minimum" Value="0"/>
            </Style>

            <Style x:Key="CustomArgsEnabled" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MatTextbox}">
                <Setter Property="IsEnabled" Value="False"/>
                <Setter Property="Width" Value="900"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding OutputOptions.SelectedOutputType}" Value="{x:Static models:OutputType.Custom}">
                        <Setter Property="IsEnabled" Value="{Binding IsNotRendering}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="TransparencyMaskBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource CustomArgsEnabled}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding OutputOptions.UseMaskOutput}" Value="False">
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>
                </Style.Triggers >
            </Style>

            <Style x:Key="IncludeAudioBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource CustomArgsEnabled}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding OutputOptions.UseAudio}" Value="False">
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>
                </Style.Triggers >
            </Style>

            <Style x:Key="StartOffset" TargetType="{x:Type ui:NumberBox}" BasedOn="{StaticResource MatNumberBox}">
                <Setter Property="IsEnabled" Value="{Binding IsNotRendering}"/>
                <Setter Property="Minimum" Value="0"/>
                <Setter Property="Maximum" Value="120"/>
                <Setter Property="DecimalPoints" Value="2"/>
            </Style>

            <Style x:Key="StartRender" TargetType="{x:Type ui:LoaderButton}" BasedOn="{StaticResource MatLoadableButton}">
                <Setter Property="IsEnabled" Value="{Binding CanStartPlaying}"/>
                <Setter Property="Loading" Value="False"/>
                <Setter Property="RaiseLoaderClick" Value="False"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsPlaybackLoading}" Value="True">
                        <Setter Property="IsEnabled" Value="False"/>
                        <Setter Property="Loading" Value="True"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <StackPanel>
            <ui:Title HorizontalAlignment="Center" Content="Output Locations"/>
            <StackPanel Margin="0,0,0,0">
                <ui:LabelledItem Label="{ui:LangText main.render.outputFile}" HorizontalAlignment="Center" Margin="5">
                    <Button Style="{StaticResource BrowseButton}" IsEnabled="{Binding IsNotRendering}" Name="browseOutputButton" Content="{ui:LangText main.browse}" Click="browseOutputButton_Click"/>
                </ui:LabelledItem>
                <TextBox Style="{StaticResource CustomArgsEnabled}" Text="{Binding OutputOptions.OutputLocation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </StackPanel>
            <StackPanel Margin="0,15,0,0">
                <DockPanel HorizontalAlignment="Center" Margin="5">
                    <ui:Checkbox Margin="5" VerticalAlignment="Center" Content="{ui:LangText main.render.transparencyMask}" IsChecked="{Binding OutputOptions.UseMaskOutput}"/>
                    <Button Style="{StaticResource UseMaskButton}" Name="browseMaskButton" Content="{ui:LangText main.browse}" Click="browseMaskButton_Click"/>
                </DockPanel>
                <TextBox Style="{StaticResource TransparencyMaskBox}" Text="{Binding OutputOptions.MaskOutputLocation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </StackPanel>
            <StackPanel Margin="0,15,0,0">
                <DockPanel HorizontalAlignment="Center" Margin="5">
                    <ui:Checkbox Margin="5" VerticalAlignment="Center" Content="{ui:LangText main.render.includeAudio}" IsChecked="{Binding OutputOptions.UseAudio}"/>
                    <Button Style="{StaticResource UseAudioButton}" Name="browseAudioButton" Content="{ui:LangText main.browse}" Click="browseAudioButton_Click"/>
                </DockPanel>
                <TextBox Style="{StaticResource IncludeAudioBox}" Text="{Binding OutputOptions.AudioLocation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </StackPanel>
            <ui:Title HorizontalAlignment="Center" Content="Output Quality"/>
            <DockPanel Margin="0,0,0,0" HorizontalAlignment="Center">
                <ui:LabelledItem Label="{ui:LangText main.render.outputFormat}" Margin="5">
                    <ui:EnumComboBox
                        Style="{DynamicResource RenderType}"
                        Selected="{Binding OutputOptions.SelectedOutputType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  
                        Margin="5,0,0,0"
                    >
                        <ui:EnumComboBoxItem EnumValue="{x:Static models:OutputType.H264CRF}" Content="{ui:LangText main.render.h264crf}"/>
                        <!--<ui:EnumComboBoxItem EnumValue="{x:Static models:OutputType.H264NVENCCRF}" Content="h.264 NVENC CRF"/>-->
                        <ui:EnumComboBoxItem EnumValue="{x:Static models:OutputType.H264Bitrate}" Content="{ui:LangText main.render.h264bitrate}"/>
                        <ui:EnumComboBoxItem EnumValue="{x:Static models:OutputType.H264NVENCBitrate}" Content="{ui:LangText main.render.h264nvencBitrate}"/>
                        <ui:EnumComboBoxItem EnumValue="{x:Static models:OutputType.Custom}" Content="{ui:LangText main.render.custom}"/>
                    </ui:EnumComboBox>
                </ui:LabelledItem>
                <ui:LabelledItem Label="{ui:LangText main.render.bitrate}" Margin="5">
                    <ui:LabelledItem.Style>
                        <Style TargetType="ui:LabelledItem" BasedOn="{StaticResource MatLabelledItem}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding OutputOptions.SelectedOutputType}" Value="{x:Static models:OutputType.H264Bitrate}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding OutputOptions.SelectedOutputType}" Value="{x:Static models:OutputType.H264NVENCBitrate}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ui:LabelledItem.Style>
                    <ui:NumberBox
                        Style="{DynamicResource RenderBitrate}"
                        Value="{Binding OutputOptions.Bitrate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DecimalIntConvert}}"
                        MinWidth="100"
                    />
                </ui:LabelledItem>
                <ui:LabelledItem Label="{ui:LangText main.render.crf}" Margin="5">
                    <ui:LabelledItem.Style>
                        <Style TargetType="ui:LabelledItem" BasedOn="{StaticResource MatLabelledItem}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding OutputOptions.SelectedOutputType}" Value="{x:Static models:OutputType.H264CRF}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding OutputOptions.SelectedOutputType}" Value="{x:Static models:OutputType.H264NVENCCRF}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ui:LabelledItem.Style>
                    <ui:NumberBox
                        Style="{DynamicResource RenderCRF}"
                        Value="{Binding OutputOptions.CRF, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DecimalIntConvert}}"
                        MinWidth="60"
                    />
                </ui:LabelledItem>
            </DockPanel>
            <TextBox Style="{StaticResource CustomArgsEnabled}" Text="{Binding OutputOptions.FFmpegArgs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <ui:LabelledItem Margin="0,25,0,5" HorizontalAlignment="Center" Label="{ui:LangText main.render.startOffset}">
                <ui:NumberBox MinWidth="60" Style="{StaticResource StartOffset}" Value="{Binding OutputOptions.StartOffset, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DecimalDoubleConvert}}"/>
            </ui:LabelledItem>
            <ui:LoaderButton Width="500" Height="40" Content="{ui:LangText main.startRender}" Margin="20" Style="{DynamicResource StartRender}" Name="startRender" Click="startRender_Click"/>
        </StackPanel>
        <ui:Overlay>
            <ui:Overlay.Style>
                <Style TargetType="ui:Overlay" BasedOn="{StaticResource MatOverlay}">
                    <Setter Property="Showing" Value="{Binding IsRendering}"/>
                </Style>
            </ui:Overlay.Style>
            <local:RenderProgress/>
        </ui:Overlay>
    </Grid>
</UserControl>
