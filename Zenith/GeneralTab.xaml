<UserControl x:Class="Zenith.GeneralTab"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Zenith"
             xmlns:ui="clr-namespace:ZenithEngine.UI;assembly=ZenithEngine"
             xmlns:models="clr-namespace:Zenith.Models"
             mc:Ignorable="d" Name="genTab"
             d:DesignHeight="700" d:DesignWidth="1280">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <local:DecimalIntConvert x:Key="DecimalIntConvert"/>

            <Style x:Key="LoadMidiButton" TargetType="{x:Type ui:LoaderButton}" BasedOn="{StaticResource MatLoadableButton}">
                <Setter Property="Content" Value="Load"/>
                <Setter Property="IsEnabled" Value="False"/>
                <Setter Property="Height" Value="36"/>
                <Setter Property="Padding" Value="30,0"/>
                <Setter Property="Content">
                    <Setter.Value>
                        <TextBlock TextTrimming="CharacterEllipsis" Text="{Binding Midi.Loaded.FileName}"/>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Midi.LoadStatus}" Value="{x:Static models:MidiLoadStatus.Unloaded}">
                        <Setter Property="IsEnabled" Value="True"/>
                        <Setter Property="Content" Value="{ui:LangText main.loadMidi}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="UnloadMidiButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MatButton}">
                <Setter Property="Content" Value="{ui:LangText main.unload}"/>
                <Setter Property="IsEnabled" Value="False"/>
                <Setter Property="Height" Value="36"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Midi.LoadStatus}" Value="{x:Static models:MidiLoadStatus.Loaded}">
                        <Setter Property="IsEnabled" Value="{Binding IsNotPlaying}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ResolutionPreset" TargetType="{x:Type ui:EnumComboBox}" BasedOn="{StaticResource MatComboBox}">
                <Setter Property="IsEnabled" Value="{Binding IsNotPlaying}"/>
                <Setter Property="Enum" Value="{x:Type local:GeneralTab+ResPreset}"/>
                <Setter Property="Padding" Value="6,5,6,6"/>
                <Setter Property="MinWidth" Value="120"/>
            </Style>

            <Style x:Key="RenderWidth" TargetType="{x:Type ui:NumberBox}" BasedOn="{StaticResource MatNumberBox}">
                <Setter Property="IsEnabled" Value="{Binding IsNotPlaying}"/>
                <Setter Property="Maximum" Value="15360"/>
                <Setter Property="Minimum" Value="1"/>
            </Style>

            <Style x:Key="RendeHeight" TargetType="{x:Type ui:NumberBox}" BasedOn="{StaticResource MatNumberBox}">
                <Setter Property="IsEnabled" Value="{Binding IsNotPlaying}"/>
                <Setter Property="Maximum" Value="8640"/>
                <Setter Property="Minimum" Value="1"/>
            </Style>

            <Style x:Key="RendeSSAA" TargetType="{x:Type ui:NumberBox}" BasedOn="{StaticResource MatNumberBox}">
                <Setter Property="IsEnabled" Value="{Binding IsNotPlaying}"/>
                <Setter Property="Maximum" Value="4"/>
                <Setter Property="Minimum" Value="1"/>
            </Style>

            <Style x:Key="RenderFPS" TargetType="{x:Type ui:NumberBox}" BasedOn="{StaticResource MatNumberBox}">
                <Setter Property="IsEnabled" Value="{Binding IsNotPlaying}"/>
                <Setter Property="Maximum" Value="1000"/>
                <Setter Property="Minimum" Value="1"/>
            </Style>

            <Style x:Key="RenderNoteSize" TargetType="{x:Type ui:EnumComboBox}" BasedOn="{StaticResource MatComboBox}">
                <Setter Property="IsEnabled" Value="{Binding IsNotPlaying}"/>
                <Setter Property="Enum" Value="{x:Type models:NoteSize}"/>
                <Setter Property="Padding" Value="6,5,6,6"/>
                <Setter Property="MinWidth" Value="120"/>
            </Style>

            <Style x:Key="ReloadKDMAPI" BasedOn="{StaticResource MatLoadableButton}" TargetType="ui:LoaderButton">
                <Setter Property="Content" Value="{ui:LangText main.loadKdmapi}"/>
                <Setter Property="IsEnabled" Value="True"/>
                <Setter Property="Loading" Value="{Binding LoadingKdmapi}"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding KdmapiConnected}" Value="true">
                        <Setter Property="Content" Value="{ui:LangText main.unloadKdmapi}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding LoadingKdmapi}" Value="true">
                        <Setter Property="IsEnabled" Value="False"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="StartPreview" TargetType="{x:Type ui:LoaderButton}" BasedOn="{StaticResource MatLoadableButton}">
                <Setter Property="IsEnabled" Value="{Binding CanStartPlaying}"/>
                <Setter Property="Loading" Value="False"/>
                <Setter Property="RaiseLoaderClick" Value="False"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsPlaybackLoading}" Value="True">
                        <Setter Property="IsEnabled" Value="False"/>
                        <Setter Property="Loading" Value="True"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="250"/>
            </Grid.ColumnDefinitions>
            <DockPanel LastChildFill="False">
                <StackPanel DockPanel.Dock="Top">
                    <ui:LoaderButton Margin="10" Style="{StaticResource LoadMidiButton}" Name="loadMidi" LoaderClick="loadMidi_Click"/>
                    <Button Grid.Column="1" Margin="10" Style="{DynamicResource UnloadMidiButton}" Name="unloadMidi" Click="unloadMidi_Click" />
                </StackPanel>
                <StackPanel DockPanel.Dock="Top">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Midi.LoadStatus}" Value="{x:Static models:MidiLoadStatus.Loaded}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <DockPanel HorizontalAlignment="Center">
                        <Label Content="{ui:LangText main.notes}"/>
                        <Label Content="{Binding Midi.Loaded.MidiFile.NoteCount}"></Label>
                    </DockPanel>
                    <DockPanel HorizontalAlignment="Center">
                        <Label Content="{ui:LangText main.ppq}"/>
                        <Label Content="{Binding Midi.Loaded.MidiFile.PPQ}"></Label>
                    </DockPanel>
                </StackPanel>
                <ui:LoaderButton Margin="10" Style="{DynamicResource ReloadKDMAPI}" DockPanel.Dock="Bottom" Name="kdmapiSwitch" LoaderClick="kdmapiSwitch_LoaderClick"/>
                <Grid></Grid>
            </DockPanel>
            <StackPanel Grid.Column="1">

                <ui:Title HorizontalAlignment="Center" Content="{ui:LangText main.gen.renderSettings}"/>
                <DockPanel HorizontalAlignment="Center">
                    <ui:LabelledItem Label="{ui:LangText main.gen.resPreset}" Margin="5">
                        <ui:EnumComboBox
                            Style="{DynamicResource ResolutionPreset}"
                            x:Name="resolutionPreset" SelectionChanged="ResPreset_SelectionChanged"
                        >
                        </ui:EnumComboBox>
                    </ui:LabelledItem>

                    <ui:LabelledItem Label="{ui:LangText main.gen.width}" MinLabelWidth="60" Margin="5">
                        <ui:NumberBox
                            Step="1"
                            Style="{DynamicResource RenderWidth}"
                            Value="{Binding RenderArgs.Width, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DecimalIntConvert}}"
                            Width="100"
                            x:Name="renderWidth"
                        />
                    </ui:LabelledItem>

                    <ui:LabelledItem Label="{ui:LangText main.gen.height}" Margin="5">
                        <ui:NumberBox
                            Step="1"
                            Style="{DynamicResource RendeHeight}"
                            Value="{Binding RenderArgs.Height, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DecimalIntConvert}}"
                            Width="100"
                            x:Name="renderHeight"
                        />
                    </ui:LabelledItem>
                </DockPanel>

                <DockPanel HorizontalAlignment="Center" Margin="10">
                    <ui:LabelledItem Label="{ui:LangText main.gen.ssaa}" Margin="5">
                        <ui:NumberBox
                            Step="1"
                            Style="{DynamicResource RendeSSAA}"
                            Value="{Binding RenderArgs.SSAA, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DecimalIntConvert}}"
                            Width="100"
                        />
                    </ui:LabelledItem>

                    <ui:LabelledItem Label="{ui:LangText main.gen.fps}" Margin="5">
                        <ui:NumberBox
                                Style="{DynamicResource RenderFPS}"
                                Value="{Binding RenderArgs.FPS, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DecimalIntConvert}}"
                                Width="100"
                            />
                    </ui:LabelledItem>

                    <ui:LabelledItem Label="{ui:LangText main.gen.noteSizing}" Margin="5">
                        <ui:EnumComboBox
                            Style="{DynamicResource RenderNoteSize}"
                            Selected="{Binding RenderArgs.NoteSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  
                        >
                            <ui:EnumComboBoxItem EnumValue="{x:Static models:NoteSize.Tick}" Content="{ui:LangText main.noteSizes.tick}"/>
                            <ui:EnumComboBoxItem EnumValue="{x:Static models:NoteSize.Time}" Content="{ui:LangText main.noteSizes.time}"/>
                        </ui:EnumComboBox>
                    </ui:LabelledItem>
                </DockPanel>
                <DockPanel HorizontalAlignment="Center">
                    <ui:Checkbox Content="{ui:LangText main.gen.ignoreColorEvents}" VerticalAlignment="Center" Margin="5" IsEnabled="{Binding IsNotPlaying}" IsChecked="{Binding RenderArgs.IgnoreColorEvents, UpdateSourceTrigger=PropertyChanged}"/>
                </DockPanel>

                <ui:Title Margin="0,70,0,00" HorizontalAlignment="Center" Content="{ui:LangText main.gen.preview}"/>

                <DockPanel HorizontalAlignment="Center">
                    <ui:Checkbox Margin="10" IsChecked="{Binding RealtimePlayback, UpdateSourceTrigger=PropertyChanged}" Content="{ui:LangText main.gen.realtimePlayback}"/>
                    <ui:Checkbox Margin="10" IsChecked="{Binding VsyncEnabled, UpdateSourceTrigger=PropertyChanged}" Content="{ui:LangText main.gen.vsyncEnabled}"/>
                    <ui:Checkbox Margin="10" IsChecked="{Binding Paused, UpdateSourceTrigger=PropertyChanged}" Content="{ui:LangText main.gen.paused}"/>
                </DockPanel>
                <Label Margin="0,20,0,0" HorizontalAlignment="Center" Content="{ui:LangText main.gen.previewSpeed}"/>
                <ui:ValueSlider Name="speedSlider" Value="{Binding PreviewSpeed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" DecimalPoints="2" Width="600" Maximum="50" Minimum="0.01" TrueMax="50" TrueMin="0.01" />
                <Grid Margin="30">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <ui:LoaderButton Grid.Column="0" Margin="5" Style="{DynamicResource StartPreview}" Name="startPreview" Click="startPreview_Click" Content="{ui:LangText main.start}"/>
                    <Button Grid.Column="1" Margin="5" IsEnabled="{Binding IsPlaying}" Name="stopPlayback" Click="stopPlayback_Click" Content="{ui:LangText main.stop}"/>
                </Grid>
            </StackPanel>
            <DockPanel Grid.Column="2" Margin="10" LastChildFill="True">
                <ui:LoaderButton Margin="0,10,0,00" DockPanel.Dock="Bottom" Name="reloadModules" IsEnabled="{Binding AreModulesLoaded}" Loading="{Binding IsLoadingModules}" LoaderClick="reloadModules_LoaderClick">
                    Reload Modules
                </ui:LoaderButton>
                <ListView Name="pluginsList" ScrollViewer.CanContentScroll="False"
                    HorizontalContentAlignment="Stretch"
                    ItemsSource="{Binding RenderModules}"
                    SelectedItem="{Binding SelectedModule, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                >
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock Text="{Binding Name}" Margin="3" HorizontalAlignment="Center" />
                                <Image Source="{Binding PreviewImage}" MaxHeight="80" MaxWidth="200"/>
                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </DockPanel>
        </Grid>
        <ui:Overlay>
            <ui:Overlay.Style>
                <Style TargetType="ui:Overlay" BasedOn="{StaticResource MatOverlay}">
                    <Setter Property="Showing" Value="False"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Midi.LoadStatus}" Value="{x:Static models:MidiLoadStatus.Loading}">
                            <Setter Property="Showing" Value="True"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Midi.LoadStatus}" Value="{x:Static models:MidiLoadStatus.Cancelling}">
                            <Setter Property="Showing" Value="True"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ui:Overlay.Style>
            <DockPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <StackPanel>
                    <DockPanel>
                        <Label Content="{Binding Midi.LoaderStatus.Parsed}"/>
                        <Label Content="/"/>
                        <Label Content="{Binding Midi.LoaderStatus.Discovered}"/>
                    </DockPanel>
                    <ui:LoaderButton Name="cancelLoadButton" LoaderClick="cancelLoadButton_Click">Cancel</ui:LoaderButton>
                </StackPanel>
            </DockPanel>
        </ui:Overlay>
        <ui:Overlay Showing="{Binding SelectingHistoricalMidi, ElementName=genTab}">
            <Border Margin="70" Width="500" HorizontalAlignment="Center" Background="{DynamicResource BackgroundBrush}">
                <Border.Effect>
                    <DropShadowEffect BlurRadius="5" ShadowDepth="0" Color="Black"/>
                </Border.Effect>
                <DockPanel>
                    <Button Margin="10" Name="browseMidiButton" DockPanel.Dock="Top">
                        Browse
                    </Button>
                    <Button Margin="10" Name="cancelSelectingMidiButton" DockPanel.Dock="Bottom">
                        Cancel
                    </Button>
                    <ListView 
                        Margin="10,0"
                        Name="selectPreviousMidiList"
                        ScrollViewer.CanContentScroll="False"
                        HorizontalContentAlignment="Stretch"
                        ItemsSource="{Binding Cache.HistoricalMidiFiles}"
                    >
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <TextBlock TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Margin="5" Width="450" Text="{Binding Name}"/>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </DockPanel>
            </Border>
        </ui:Overlay>
    </Grid>
</UserControl>
